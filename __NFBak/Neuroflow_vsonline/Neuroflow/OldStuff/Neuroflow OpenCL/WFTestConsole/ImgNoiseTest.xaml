<Activity mc:Ignorable="sap" x:Class="ImgNoiseTest" sap:VirtualizedContainerService.HintSize="1236,3363" mva:VisualBasic.Settings="Assembly references and imported namespaces for internal implementation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:i="clr-namespace:ImgNoise;assembly=ImgNoise" xmlns:ip="clr-namespace:ImgNoise.Properties;assembly=ImgNoise" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:na="clr-namespace:Neuroflow.Activities;assembly=Neuroflow.Activities" xmlns:nann="clr-namespace:Neuroflow.Activities.Networks.Neural;assembly=Neuroflow.Activities" xmlns:nannc="clr-namespace:Neuroflow.Activities.Networks.Neural.CPU;assembly=Neuroflow.Activities" xmlns:nannl="clr-namespace:Neuroflow.Activities.Networks.Neural.Learning;assembly=Neuroflow.Activities" xmlns:nav="clr-namespace:Neuroflow.Activities.Vectors;assembly=Neuroflow.Activities" xmlns:navb="clr-namespace:Neuroflow.Activities.Vectors.BatchingStrategies;assembly=Neuroflow.Activities" xmlns:nc="clr-namespace:Neuroflow.Core;assembly=Neuroflow.Core" xmlns:ncc="clr-namespace:Neuroflow.Core.ComputationAPI;assembly=Neuroflow.Core" xmlns:ncc1="clr-namespace:Neuroflow.Core.Computations;assembly=Neuroflow.Core" xmlns:ncv="clr-namespace:Neuroflow.Core.Vectors;assembly=Neuroflow.Core" xmlns:nn="clr-namespace:Neuroflow.Networks;assembly=Neuroflow.Networks" xmlns:nnn="clr-namespace:Neuroflow.Networks.Neural;assembly=Neuroflow.Networks" xmlns:nnnl="clr-namespace:Neuroflow.Networks.Neural.Learning;assembly=Neuroflow.Networks" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:s4="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sco1="clr-namespace:System.Collections.ObjectModel;assembly=System" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <na:ComputationContext sad:XamlDebuggerXmlReader.FileName="E:\Users\unbornchikken\Documents\Visual Studio 2010\Projects\Neuroflow OpenCL\WFTestConsole\ImgNoiseTest.xaml" sap:VirtualizedContainerService.HintSize="1196,3323">
    <na:ComputationContext.Body>
      <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="1182,3287">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence DisplayName="Create Training" sap:VirtualizedContainerService.HintSize="1160,2208">
          <Sequence.Variables>
            <Variable x:TypeArguments="nnn:NeuralNetwork" Name="network" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg3:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg3:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <na:Experiment sap:VirtualizedContainerService.HintSize="1138,1947">
            <na:Experiment.Branches>
              <na:ExperimentBranch DisplayName="FF" sap:VirtualizedContainerService.HintSize="540,1911" IsActive="True">
                <na:ExperimentBranch.Body>
                  <Sequence sap:VirtualizedContainerService.HintSize="518,1823">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg3:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Create Providers" sap:VirtualizedContainerService.HintSize="496,51">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg3:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="242,58">
                        <Assign.To>
                          <OutArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[trainingProvider]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[ImgNoiseInit.CreateFFProvider()]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="242,58">
                        <Assign.To>
                          <OutArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[validationProvider]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[ImgNoiseInit.CreateFFValidationProvider()]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Create Network" sap:VirtualizedContainerService.HintSize="496,1608">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sco:Collection(nnnl:LearningRule)" Name="rules" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg3:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <nannl:NewSignChangesRule DisplayName="SignChanges" sap:VirtualizedContainerService.HintSize="474,214" IsInitialized="True">
                        <nannl:NewSignChangesRule.ActivityWithResultProperties>
                          <na:ActivityWithResultValue x:Key="WeightDecay" ActivityResultType="nnnl:WeightDecay" ForProperty="True" Name="WeightDecay" PropertyType="Activity(nnnl:WeightDecay)">
                            <na:ActivityWithResultValue.Activity>
                              <nannl:NewWeightDecay DisplayName="WeightDecay" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                <nannl:NewWeightDecay.InArgumentProperties>
                                  <na:InArgumentValue x:Key="Cutoff" ForProperty="True" Name="Cutoff" PropertyType="InArgument(x:Double)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Double">2</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                  <na:InArgumentValue x:Key="Factor" ForProperty="True" Name="Factor" PropertyType="InArgument(x:Double)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Double">-0.0001</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                  <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nannl:NewWeightDecay.InArgumentProperties>
                              </nannl:NewWeightDecay>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                          <na:ActivityWithResultValue x:Key="IterationRepeat" ActivityResultType="ncv:IterationRepeatPars" ForProperty="True" Name="IterationRepeat" PropertyType="Activity(ncv:IterationRepeatPars)">
                            <na:ActivityWithResultValue.Activity>
                              <nav:NewIterationRepeatPars DisplayName="IterationRepeatPars" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                <nav:NewIterationRepeatPars.InArgumentProperties>
                                  <na:InArgumentValue x:Key="minIterations" ForProperty="False" Name="minIterations" PropertyType="InArgument(x:Int32)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                  <na:InArgumentValue x:Key="maxIterations" ForProperty="False" Name="maxIterations" PropertyType="InArgument(x:Int32)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nav:NewIterationRepeatPars.InArgumentProperties>
                              </nav:NewIterationRepeatPars>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                        </nannl:NewSignChangesRule.ActivityWithResultProperties>
                        <nannl:NewSignChangesRule.InArgumentProperties>
                          <na:InArgumentValue x:Key="MinStepSize" ForProperty="True" Name="MinStepSize" PropertyType="InArgument(x:Double)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Double">1E-05</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="MaxStepSize" ForProperty="True" Name="MaxStepSize" PropertyType="InArgument(x:Double)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Double">0.001</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="StochasticAdaptiveStateUpdate" ForProperty="True" Name="StochasticAdaptiveStateUpdate" PropertyType="InArgument(x:Boolean)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="Momentum" ForProperty="True" Name="Momentum" PropertyType="InArgument(x:Double)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Double">0.25</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="UseSmoothing" ForProperty="True" Name="UseSmoothing" PropertyType="InArgument(x:Boolean)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="Mode" ForProperty="True" Name="Mode" PropertyType="InArgument(nnnl:LearningMode)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="nnnl:LearningMode">[LearningMode.Stochastic]</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="GroupID" ForProperty="True" Name="GroupID" PropertyType="InArgument(x:Int32)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                        </nannl:NewSignChangesRule.InArgumentProperties>
                      </nannl:NewSignChangesRule>
                      <nannl:NewLearningRuleCollection DisplayName="Create Rules" sap:VirtualizedContainerService.HintSize="474,304" Result="[rules]">
                        <nannl:NewLearningRuleCollection.CreateItemActivities>
                          <nannl:NewNoisedWeightInitializationRule DisplayName="NoisedWeightInitialization" sap:VirtualizedContainerService.HintSize="332,36" IsInitialized="True">
                            <nannl:NewNoisedWeightInitializationRule.InArgumentProperties>
                              <na:InArgumentValue x:Key="Noise" ForProperty="True" Name="Noise" PropertyType="InArgument(x:Double)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Double">0.3</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="GroupID" ForProperty="True" Name="GroupID" PropertyType="InArgument(x:Int32)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                            </nannl:NewNoisedWeightInitializationRule.InArgumentProperties>
                          </nannl:NewNoisedWeightInitializationRule>
                          <nannl:NewQSARule DisplayName="QSA" sap:VirtualizedContainerService.HintSize="332,193" IsInitialized="True">
                            <nannl:NewQSARule.ActivityWithResultProperties>
                              <na:ActivityWithResultValue Activity="{x:Null}" x:Key="WeightDecay" ActivityResultType="nnnl:WeightDecay" ForProperty="True" Name="WeightDecay" PropertyType="Activity(nnnl:WeightDecay)" />
                              <na:ActivityWithResultValue x:Key="IterationRepeat" ActivityResultType="ncv:IterationRepeatPars" ForProperty="True" Name="IterationRepeat" PropertyType="Activity(ncv:IterationRepeatPars)">
                                <na:ActivityWithResultValue.Activity>
                                  <nav:NewIterationRepeatPars DisplayName="IterationRepeatPars" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                    <nav:NewIterationRepeatPars.InArgumentProperties>
                                      <na:InArgumentValue x:Key="minIterations" ForProperty="False" Name="minIterations" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                      <na:InArgumentValue x:Key="maxIterations" ForProperty="False" Name="maxIterations" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">15</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                    </nav:NewIterationRepeatPars.InArgumentProperties>
                                  </nav:NewIterationRepeatPars>
                                </na:ActivityWithResultValue.Activity>
                              </na:ActivityWithResultValue>
                            </nannl:NewQSARule.ActivityWithResultProperties>
                            <nannl:NewQSARule.InArgumentProperties>
                              <na:InArgumentValue x:Key="Up" ForProperty="True" Name="Up" PropertyType="InArgument(x:Double)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Double">0.0001</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="Down" ForProperty="True" Name="Down" PropertyType="InArgument(x:Double)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Double">1E-06</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="DistributionType" ForProperty="True" Name="DistributionType" PropertyType="InArgument(nnnl:DistributionType)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="nnnl:DistributionType">[DistributionType.Uniform]</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="GroupID" ForProperty="True" Name="GroupID" PropertyType="InArgument(x:Int32)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                            </nannl:NewQSARule.InArgumentProperties>
                          </nannl:NewQSARule>
                        </nannl:NewLearningRuleCollection.CreateItemActivities>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg3:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </nannl:NewLearningRuleCollection>
                      <nann:NewStandardMultilayerNeuralNetwork DisplayName="Standard Multilayer NN" sap:VirtualizedContainerService.HintSize="474,886" IsInitialized="True" Result="[network]">
                        <nann:NewStandardMultilayerNeuralNetwork.ActivityWithResultProperties>
                          <na:ActivityWithResultValue x:Key="HiddenLayers" ActivityResultType="sco:Collection(nnn:Layer)" ForProperty="True" Name="HiddenLayers" PropertyType="Activity(sco:Collection(nnn:Layer))">
                            <na:ActivityWithResultValue.Activity>
                              <nann:NewLayerCollection DisplayName="LayerCollection" sap:VirtualizedContainerService.HintSize="343,447">
                                <nann:NewLayerCollection.CreateItemActivities>
                                  <nann:NewActivationLayer DisplayName="ActivationLayer" sap:VirtualizedContainerService.HintSize="329,186" IsInitialized="True">
                                    <nann:NewActivationLayer.ActivityWithResultProperties>
                                      <na:ActivityWithResultValue x:Key="function" ActivityResultType="nnn:ActivationFunction" ForProperty="False" Name="function" PropertyType="Activity(nnn:ActivationFunction)">
                                        <na:ActivityWithResultValue.Activity>
                                          <nann:NewSigmoidActivationFunction DisplayName="SigmoidActivationFunction" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                            <nann:NewSigmoidActivationFunction.InArgumentProperties>
                                              <na:InArgumentValue x:Key="alpha" ForProperty="False" Name="alpha" PropertyType="InArgument(x:Double)">
                                                <na:InArgumentValue.InArgument>
                                                  <InArgument x:TypeArguments="x:Double">1.05</InArgument>
                                                </na:InArgumentValue.InArgument>
                                              </na:InArgumentValue>
                                            </nann:NewSigmoidActivationFunction.InArgumentProperties>
                                          </nann:NewSigmoidActivationFunction>
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                      <na:ActivityWithResultValue x:Key="learningRules" ActivityResultType="sco:Collection(nnnl:LearningRule)" ForProperty="False" Name="learningRules" PropertyType="Activity(sco:Collection(nnnl:LearningRule))">
                                        <na:ActivityWithResultValue.Activity>
                                          <mva:VisualBasicValue x:TypeArguments="sco:Collection(nnnl:LearningRule)" ExpressionText="rules" sap:VirtualizedContainerService.HintSize="289,55" />
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                    </nann:NewActivationLayer.ActivityWithResultProperties>
                                    <nann:NewActivationLayer.InArgumentProperties>
                                      <na:InArgumentValue x:Key="size" ForProperty="False" Name="size" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">20</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                    </nann:NewActivationLayer.InArgumentProperties>
                                  </nann:NewActivationLayer>
                                  <nann:NewActivationLayer DisplayName="ActivationLayer" sap:VirtualizedContainerService.HintSize="329,186" IsInitialized="True">
                                    <nann:NewActivationLayer.ActivityWithResultProperties>
                                      <na:ActivityWithResultValue x:Key="function" ActivityResultType="nnn:ActivationFunction" ForProperty="False" Name="function" PropertyType="Activity(nnn:ActivationFunction)">
                                        <na:ActivityWithResultValue.Activity>
                                          <nann:NewSigmoidActivationFunction DisplayName="SigmoidActivationFunction" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                            <nann:NewSigmoidActivationFunction.InArgumentProperties>
                                              <na:InArgumentValue x:Key="alpha" ForProperty="False" Name="alpha" PropertyType="InArgument(x:Double)">
                                                <na:InArgumentValue.InArgument>
                                                  <InArgument x:TypeArguments="x:Double">1.05</InArgument>
                                                </na:InArgumentValue.InArgument>
                                              </na:InArgumentValue>
                                            </nann:NewSigmoidActivationFunction.InArgumentProperties>
                                          </nann:NewSigmoidActivationFunction>
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                      <na:ActivityWithResultValue x:Key="learningRules" ActivityResultType="sco:Collection(nnnl:LearningRule)" ForProperty="False" Name="learningRules" PropertyType="Activity(sco:Collection(nnnl:LearningRule))">
                                        <na:ActivityWithResultValue.Activity>
                                          <mva:VisualBasicValue x:TypeArguments="sco:Collection(nnnl:LearningRule)" ExpressionText="rules" sap:VirtualizedContainerService.HintSize="289,55" />
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                    </nann:NewActivationLayer.ActivityWithResultProperties>
                                    <nann:NewActivationLayer.InArgumentProperties>
                                      <na:InArgumentValue x:Key="size" ForProperty="False" Name="size" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">10</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                    </nann:NewActivationLayer.InArgumentProperties>
                                  </nann:NewActivationLayer>
                                </nann:NewLayerCollection.CreateItemActivities>
                              </nann:NewLayerCollection>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                          <na:ActivityWithResultValue x:Key="OutputLayer" ActivityResultType="nnn:Layer" ForProperty="True" Name="OutputLayer" PropertyType="Activity(nnn:Layer)">
                            <na:ActivityWithResultValue.Activity>
                              <nann:NewActivationLayer DisplayName="ActivationLayer" sap:VirtualizedContainerService.HintSize="343,186" IsInitialized="True">
                                <nann:NewActivationLayer.ActivityWithResultProperties>
                                  <na:ActivityWithResultValue x:Key="function" ActivityResultType="nnn:ActivationFunction" ForProperty="False" Name="function" PropertyType="Activity(nnn:ActivationFunction)">
                                    <na:ActivityWithResultValue.Activity>
                                      <nann:NewLinearActivationFunction DisplayName="LinearActivationFunction" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                        <nann:NewLinearActivationFunction.InArgumentProperties>
                                          <na:InArgumentValue x:Key="alpha" ForProperty="False" Name="alpha" PropertyType="InArgument(x:Double)">
                                            <na:InArgumentValue.InArgument>
                                              <InArgument x:TypeArguments="x:Double">1.05</InArgument>
                                            </na:InArgumentValue.InArgument>
                                          </na:InArgumentValue>
                                        </nann:NewLinearActivationFunction.InArgumentProperties>
                                      </nann:NewLinearActivationFunction>
                                    </na:ActivityWithResultValue.Activity>
                                  </na:ActivityWithResultValue>
                                  <na:ActivityWithResultValue x:Key="learningRules" ActivityResultType="sco:Collection(nnnl:LearningRule)" ForProperty="False" Name="learningRules" PropertyType="Activity(sco:Collection(nnnl:LearningRule))">
                                    <na:ActivityWithResultValue.Activity>
                                      <mva:VisualBasicValue x:TypeArguments="sco:Collection(nnnl:LearningRule)" ExpressionText="rules" sap:VirtualizedContainerService.HintSize="289,55" />
                                    </na:ActivityWithResultValue.Activity>
                                  </na:ActivityWithResultValue>
                                </nann:NewActivationLayer.ActivityWithResultProperties>
                                <nann:NewActivationLayer.InArgumentProperties>
                                  <na:InArgumentValue x:Key="size" ForProperty="False" Name="size" PropertyType="InArgument(x:Int32)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Int32">[trainingProvider.OutputInterfaceLength]</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nann:NewActivationLayer.InArgumentProperties>
                              </nann:NewActivationLayer>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                          <na:ActivityWithResultValue x:Key="InitParameters" ActivityResultType="nnn:NNInitParameters" ForProperty="True" Name="InitParameters" PropertyType="Activity(nnn:NNInitParameters)">
                            <na:ActivityWithResultValue.Activity>
                              <nannc:NewCPUNNInitParameters DisplayName="CPUNNInitParameters" sap:VirtualizedContainerService.HintSize="343,104" IsInitialized="True">
                                <nannc:NewCPUNNInitParameters.ActivityWithResultProperties>
                                  <na:ActivityWithResultValue Activity="{x:Null}" x:Key="RecurrentOptions" ActivityResultType="nnn:RecurrentOptions" ForProperty="True" Name="RecurrentOptions" PropertyType="Activity(nnn:RecurrentOptions)" />
                                </nannc:NewCPUNNInitParameters.ActivityWithResultProperties>
                                <nannc:NewCPUNNInitParameters.InArgumentProperties>
                                  <na:InArgumentValue x:Key="RunParallel" ForProperty="True" Name="RunParallel" PropertyType="InArgument(x:Boolean)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nannc:NewCPUNNInitParameters.InArgumentProperties>
                              </nannc:NewCPUNNInitParameters>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                        </nann:NewStandardMultilayerNeuralNetwork.ActivityWithResultProperties>
                        <nann:NewStandardMultilayerNeuralNetwork.InArgumentProperties>
                          <na:InArgumentValue x:Key="InputSize" ForProperty="True" Name="InputSize" PropertyType="InArgument(x:Int32)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Int32">[trainingProvider.InputInterfaceLength]</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                        </nann:NewStandardMultilayerNeuralNetwork.InArgumentProperties>
                      </nann:NewStandardMultilayerNeuralNetwork>
                    </Sequence>
                  </Sequence>
                </na:ExperimentBranch.Body>
              </na:ExperimentBranch>
              <na:ExperimentBranch DisplayName="Recurrent" sap:VirtualizedContainerService.HintSize="545,1911" IsActive="False">
                <na:ExperimentBranch.Body>
                  <Sequence sap:VirtualizedContainerService.HintSize="523,1844">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg3:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Create Providers" sap:VirtualizedContainerService.HintSize="501,51">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg3:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="242,58">
                        <Assign.To>
                          <OutArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[trainingProvider]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[ImgNoiseInit.CreateRProvider()]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="242,58">
                        <Assign.To>
                          <OutArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[validationProvider]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider">[ImgNoiseInit.CreateRValidationProvider()]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Create Network" sap:VirtualizedContainerService.HintSize="501,1629">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sco:Collection(nnnl:LearningRule)" Name="rules" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg3:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <nannl:NewSignChangesRule DisplayName="SignChanges" sap:VirtualizedContainerService.HintSize="479,214" IsInitialized="True">
                        <nannl:NewSignChangesRule.ActivityWithResultProperties>
                          <na:ActivityWithResultValue x:Key="WeightDecay" ActivityResultType="nnnl:WeightDecay" ForProperty="True" Name="WeightDecay" PropertyType="Activity(nnnl:WeightDecay)">
                            <na:ActivityWithResultValue.Activity>
                              <nannl:NewWeightDecay DisplayName="WeightDecay" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                <nannl:NewWeightDecay.InArgumentProperties>
                                  <na:InArgumentValue x:Key="Cutoff" ForProperty="True" Name="Cutoff" PropertyType="InArgument(x:Double)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Double">2</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                  <na:InArgumentValue x:Key="Factor" ForProperty="True" Name="Factor" PropertyType="InArgument(x:Double)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Double">-0.0001</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                  <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nannl:NewWeightDecay.InArgumentProperties>
                              </nannl:NewWeightDecay>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                          <na:ActivityWithResultValue x:Key="IterationRepeat" ActivityResultType="ncv:IterationRepeatPars" ForProperty="True" Name="IterationRepeat" PropertyType="Activity(ncv:IterationRepeatPars)">
                            <na:ActivityWithResultValue.Activity>
                              <nav:NewIterationRepeatPars DisplayName="IterationRepeatPars" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                <nav:NewIterationRepeatPars.InArgumentProperties>
                                  <na:InArgumentValue x:Key="minIterations" ForProperty="False" Name="minIterations" PropertyType="InArgument(x:Int32)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                  <na:InArgumentValue x:Key="maxIterations" ForProperty="False" Name="maxIterations" PropertyType="InArgument(x:Int32)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nav:NewIterationRepeatPars.InArgumentProperties>
                              </nav:NewIterationRepeatPars>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                        </nannl:NewSignChangesRule.ActivityWithResultProperties>
                        <nannl:NewSignChangesRule.InArgumentProperties>
                          <na:InArgumentValue x:Key="MinStepSize" ForProperty="True" Name="MinStepSize" PropertyType="InArgument(x:Double)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Double">1E-07</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="MaxStepSize" ForProperty="True" Name="MaxStepSize" PropertyType="InArgument(x:Double)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Double">0.001</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="StochasticAdaptiveStateUpdate" ForProperty="True" Name="StochasticAdaptiveStateUpdate" PropertyType="InArgument(x:Boolean)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="Momentum" ForProperty="True" Name="Momentum" PropertyType="InArgument(x:Double)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Double">0.25</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="UseSmoothing" ForProperty="True" Name="UseSmoothing" PropertyType="InArgument(x:Boolean)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="Mode" ForProperty="True" Name="Mode" PropertyType="InArgument(nnnl:LearningMode)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="nnnl:LearningMode">[LearningMode.Stochastic]</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                          <na:InArgumentValue x:Key="GroupID" ForProperty="True" Name="GroupID" PropertyType="InArgument(x:Int32)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                        </nannl:NewSignChangesRule.InArgumentProperties>
                      </nannl:NewSignChangesRule>
                      <nannl:NewLearningRuleCollection DisplayName="Create Rules" sap:VirtualizedContainerService.HintSize="479,304" Result="[rules]">
                        <nannl:NewLearningRuleCollection.CreateItemActivities>
                          <nannl:NewNoisedWeightInitializationRule DisplayName="NoisedWeightInitialization" sap:VirtualizedContainerService.HintSize="332,36" IsInitialized="True">
                            <nannl:NewNoisedWeightInitializationRule.InArgumentProperties>
                              <na:InArgumentValue x:Key="Noise" ForProperty="True" Name="Noise" PropertyType="InArgument(x:Double)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Double">0.3</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="GroupID" ForProperty="True" Name="GroupID" PropertyType="InArgument(x:Int32)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                            </nannl:NewNoisedWeightInitializationRule.InArgumentProperties>
                          </nannl:NewNoisedWeightInitializationRule>
                          <nannl:NewGaussianHistoryRule DisplayName="GaussianHistory" sap:VirtualizedContainerService.HintSize="332,193" IsInitialized="True">
                            <nannl:NewGaussianHistoryRule.ActivityWithResultProperties>
                              <na:ActivityWithResultValue Activity="{x:Null}" x:Key="WeightDecay" ActivityResultType="nnnl:WeightDecay" ForProperty="True" Name="WeightDecay" PropertyType="Activity(nnnl:WeightDecay)" />
                              <na:ActivityWithResultValue x:Key="IterationRepeat" ActivityResultType="ncv:IterationRepeatPars" ForProperty="True" Name="IterationRepeat" PropertyType="Activity(ncv:IterationRepeatPars)">
                                <na:ActivityWithResultValue.Activity>
                                  <nav:NewIterationRepeatPars DisplayName="IterationRepeatPars" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                    <nav:NewIterationRepeatPars.InArgumentProperties>
                                      <na:InArgumentValue x:Key="minIterations" ForProperty="False" Name="minIterations" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                      <na:InArgumentValue x:Key="maxIterations" ForProperty="False" Name="maxIterations" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                    </nav:NewIterationRepeatPars.InArgumentProperties>
                                  </nav:NewIterationRepeatPars>
                                </na:ActivityWithResultValue.Activity>
                              </na:ActivityWithResultValue>
                            </nannl:NewGaussianHistoryRule.ActivityWithResultProperties>
                            <nannl:NewGaussianHistoryRule.InArgumentProperties>
                              <na:InArgumentValue x:Key="StdDev" ForProperty="True" Name="StdDev" PropertyType="InArgument(x:Double)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Double">0.3</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="Size" ForProperty="True" Name="Size" PropertyType="InArgument(x:Int32)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Int32">10</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="Scale" ForProperty="True" Name="Scale" PropertyType="InArgument(x:Double)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Double">0.5</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="IsEnabled" ForProperty="True" Name="IsEnabled" PropertyType="InArgument(x:Boolean)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                              <na:InArgumentValue x:Key="GroupID" ForProperty="True" Name="GroupID" PropertyType="InArgument(x:Int32)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                            </nannl:NewGaussianHistoryRule.InArgumentProperties>
                          </nannl:NewGaussianHistoryRule>
                        </nannl:NewLearningRuleCollection.CreateItemActivities>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg3:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </nannl:NewLearningRuleCollection>
                      <nann:NewStandardMultilayerNeuralNetwork DisplayName="Standard Multilayer NN" sap:VirtualizedContainerService.HintSize="479,907" IsInitialized="True" Result="[network]">
                        <nann:NewStandardMultilayerNeuralNetwork.ActivityWithResultProperties>
                          <na:ActivityWithResultValue x:Key="HiddenLayers" ActivityResultType="sco:Collection(nnn:Layer)" ForProperty="True" Name="HiddenLayers" PropertyType="Activity(sco:Collection(nnn:Layer))">
                            <na:ActivityWithResultValue.Activity>
                              <nann:NewLayerCollection DisplayName="LayerCollection" sap:VirtualizedContainerService.HintSize="348,447">
                                <nann:NewLayerCollection.CreateItemActivities>
                                  <nann:NewActivationLayer DisplayName="ActivationLayer" sap:VirtualizedContainerService.HintSize="329,186" IsInitialized="True">
                                    <nann:NewActivationLayer.ActivityWithResultProperties>
                                      <na:ActivityWithResultValue x:Key="function" ActivityResultType="nnn:ActivationFunction" ForProperty="False" Name="function" PropertyType="Activity(nnn:ActivationFunction)">
                                        <na:ActivityWithResultValue.Activity>
                                          <nann:NewSigmoidActivationFunction DisplayName="SigmoidActivationFunction" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                            <nann:NewSigmoidActivationFunction.InArgumentProperties>
                                              <na:InArgumentValue x:Key="alpha" ForProperty="False" Name="alpha" PropertyType="InArgument(x:Double)">
                                                <na:InArgumentValue.InArgument>
                                                  <InArgument x:TypeArguments="x:Double">1.05</InArgument>
                                                </na:InArgumentValue.InArgument>
                                              </na:InArgumentValue>
                                            </nann:NewSigmoidActivationFunction.InArgumentProperties>
                                          </nann:NewSigmoidActivationFunction>
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                      <na:ActivityWithResultValue x:Key="learningRules" ActivityResultType="sco:Collection(nnnl:LearningRule)" ForProperty="False" Name="learningRules" PropertyType="Activity(sco:Collection(nnnl:LearningRule))">
                                        <na:ActivityWithResultValue.Activity>
                                          <mva:VisualBasicValue x:TypeArguments="sco:Collection(nnnl:LearningRule)" ExpressionText="rules" sap:VirtualizedContainerService.HintSize="289,55" />
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                    </nann:NewActivationLayer.ActivityWithResultProperties>
                                    <nann:NewActivationLayer.InArgumentProperties>
                                      <na:InArgumentValue x:Key="size" ForProperty="False" Name="size" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">16</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                    </nann:NewActivationLayer.InArgumentProperties>
                                  </nann:NewActivationLayer>
                                  <nann:NewActivationLayer DisplayName="ActivationLayer" sap:VirtualizedContainerService.HintSize="329,186" IsInitialized="True">
                                    <nann:NewActivationLayer.ActivityWithResultProperties>
                                      <na:ActivityWithResultValue x:Key="function" ActivityResultType="nnn:ActivationFunction" ForProperty="False" Name="function" PropertyType="Activity(nnn:ActivationFunction)">
                                        <na:ActivityWithResultValue.Activity>
                                          <nann:NewSigmoidActivationFunction DisplayName="SigmoidActivationFunction" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                            <nann:NewSigmoidActivationFunction.InArgumentProperties>
                                              <na:InArgumentValue x:Key="alpha" ForProperty="False" Name="alpha" PropertyType="InArgument(x:Double)">
                                                <na:InArgumentValue.InArgument>
                                                  <InArgument x:TypeArguments="x:Double">1.05</InArgument>
                                                </na:InArgumentValue.InArgument>
                                              </na:InArgumentValue>
                                            </nann:NewSigmoidActivationFunction.InArgumentProperties>
                                          </nann:NewSigmoidActivationFunction>
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                      <na:ActivityWithResultValue x:Key="learningRules" ActivityResultType="sco:Collection(nnnl:LearningRule)" ForProperty="False" Name="learningRules" PropertyType="Activity(sco:Collection(nnnl:LearningRule))">
                                        <na:ActivityWithResultValue.Activity>
                                          <mva:VisualBasicValue x:TypeArguments="sco:Collection(nnnl:LearningRule)" ExpressionText="rules" sap:VirtualizedContainerService.HintSize="289,55" />
                                        </na:ActivityWithResultValue.Activity>
                                      </na:ActivityWithResultValue>
                                    </nann:NewActivationLayer.ActivityWithResultProperties>
                                    <nann:NewActivationLayer.InArgumentProperties>
                                      <na:InArgumentValue x:Key="size" ForProperty="False" Name="size" PropertyType="InArgument(x:Int32)">
                                        <na:InArgumentValue.InArgument>
                                          <InArgument x:TypeArguments="x:Int32">8</InArgument>
                                        </na:InArgumentValue.InArgument>
                                      </na:InArgumentValue>
                                    </nann:NewActivationLayer.InArgumentProperties>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="Math.IsExpanded">True</x:Boolean>
                                      </scg3:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </nann:NewActivationLayer>
                                </nann:NewLayerCollection.CreateItemActivities>
                              </nann:NewLayerCollection>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                          <na:ActivityWithResultValue x:Key="OutputLayer" ActivityResultType="nnn:Layer" ForProperty="True" Name="OutputLayer" PropertyType="Activity(nnn:Layer)">
                            <na:ActivityWithResultValue.Activity>
                              <nann:NewActivationLayer DisplayName="ActivationLayer" sap:VirtualizedContainerService.HintSize="348,186" IsInitialized="True">
                                <nann:NewActivationLayer.ActivityWithResultProperties>
                                  <na:ActivityWithResultValue x:Key="function" ActivityResultType="nnn:ActivationFunction" ForProperty="False" Name="function" PropertyType="Activity(nnn:ActivationFunction)">
                                    <na:ActivityWithResultValue.Activity>
                                      <nann:NewLinearActivationFunction DisplayName="LinearActivationFunction" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                        <nann:NewLinearActivationFunction.InArgumentProperties>
                                          <na:InArgumentValue x:Key="alpha" ForProperty="False" Name="alpha" PropertyType="InArgument(x:Double)">
                                            <na:InArgumentValue.InArgument>
                                              <InArgument x:TypeArguments="x:Double">1.05</InArgument>
                                            </na:InArgumentValue.InArgument>
                                          </na:InArgumentValue>
                                        </nann:NewLinearActivationFunction.InArgumentProperties>
                                      </nann:NewLinearActivationFunction>
                                    </na:ActivityWithResultValue.Activity>
                                  </na:ActivityWithResultValue>
                                  <na:ActivityWithResultValue x:Key="learningRules" ActivityResultType="sco:Collection(nnnl:LearningRule)" ForProperty="False" Name="learningRules" PropertyType="Activity(sco:Collection(nnnl:LearningRule))">
                                    <na:ActivityWithResultValue.Activity>
                                      <mva:VisualBasicValue x:TypeArguments="sco:Collection(nnnl:LearningRule)" ExpressionText="rules" sap:VirtualizedContainerService.HintSize="289,55" />
                                    </na:ActivityWithResultValue.Activity>
                                  </na:ActivityWithResultValue>
                                </nann:NewActivationLayer.ActivityWithResultProperties>
                                <nann:NewActivationLayer.InArgumentProperties>
                                  <na:InArgumentValue x:Key="size" ForProperty="False" Name="size" PropertyType="InArgument(x:Int32)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Int32">[trainingProvider.OutputInterfaceLength]</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nann:NewActivationLayer.InArgumentProperties>
                              </nann:NewActivationLayer>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                          <na:ActivityWithResultValue x:Key="InitParameters" ActivityResultType="nnn:NNInitParameters" ForProperty="True" Name="InitParameters" PropertyType="Activity(nnn:NNInitParameters)">
                            <na:ActivityWithResultValue.Activity>
                              <nannc:NewCPUNNInitParameters DisplayName="CPUNNInitParameters" sap:VirtualizedContainerService.HintSize="348,125" IsInitialized="True">
                                <nannc:NewCPUNNInitParameters.ActivityWithResultProperties>
                                  <na:ActivityWithResultValue x:Key="RecurrentOptions" ActivityResultType="nnn:RecurrentOptions" ForProperty="True" Name="RecurrentOptions" PropertyType="Activity(nnn:RecurrentOptions)">
                                    <na:ActivityWithResultValue.Activity>
                                      <nann:NewRecurrentOptions DisplayName="RecurrentOptions" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                                        <nann:NewRecurrentOptions.InArgumentProperties>
                                          <na:InArgumentValue x:Key="maxIterations" ForProperty="False" Name="maxIterations" PropertyType="InArgument(x:Int32)">
                                            <na:InArgumentValue.InArgument>
                                              <InArgument x:TypeArguments="x:Int32">[ImgNoise.Properties.Settings.Default.RecurrentSampleLength]</InArgument>
                                            </na:InArgumentValue.InArgument>
                                          </na:InArgumentValue>
                                          <na:InArgumentValue x:Key="isFullRecurrent" ForProperty="False" Name="isFullRecurrent" PropertyType="InArgument(x:Boolean)">
                                            <na:InArgumentValue.InArgument>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </na:InArgumentValue.InArgument>
                                          </na:InArgumentValue>
                                          <na:InArgumentValue x:Key="algorithm" ForProperty="False" Name="algorithm" PropertyType="InArgument(nnn:RLAlgorithm)">
                                            <na:InArgumentValue.InArgument>
                                              <InArgument x:TypeArguments="nnn:RLAlgorithm">[RLAlgorithm.RTLR]</InArgument>
                                            </na:InArgumentValue.InArgument>
                                          </na:InArgumentValue>
                                        </nann:NewRecurrentOptions.InArgumentProperties>
                                      </nann:NewRecurrentOptions>
                                    </na:ActivityWithResultValue.Activity>
                                  </na:ActivityWithResultValue>
                                </nannc:NewCPUNNInitParameters.ActivityWithResultProperties>
                                <nannc:NewCPUNNInitParameters.InArgumentProperties>
                                  <na:InArgumentValue x:Key="RunParallel" ForProperty="True" Name="RunParallel" PropertyType="InArgument(x:Boolean)">
                                    <na:InArgumentValue.InArgument>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </na:InArgumentValue.InArgument>
                                  </na:InArgumentValue>
                                </nannc:NewCPUNNInitParameters.InArgumentProperties>
                              </nannc:NewCPUNNInitParameters>
                            </na:ActivityWithResultValue.Activity>
                          </na:ActivityWithResultValue>
                        </nann:NewStandardMultilayerNeuralNetwork.ActivityWithResultProperties>
                        <nann:NewStandardMultilayerNeuralNetwork.InArgumentProperties>
                          <na:InArgumentValue x:Key="InputSize" ForProperty="True" Name="InputSize" PropertyType="InArgument(x:Int32)">
                            <na:InArgumentValue.InArgument>
                              <InArgument x:TypeArguments="x:Int32">[trainingProvider.InputInterfaceLength]</InArgument>
                            </na:InArgumentValue.InArgument>
                          </na:InArgumentValue>
                        </nann:NewStandardMultilayerNeuralNetwork.InArgumentProperties>
                      </nann:NewStandardMultilayerNeuralNetwork>
                    </Sequence>
                  </Sequence>
                </na:ExperimentBranch.Body>
              </na:ExperimentBranch>
            </na:Experiment.Branches>
          </na:Experiment>
          <nannl:NewUnorderedTraining DisplayName="UnorderedTraining" sap:VirtualizedContainerService.HintSize="1138,97" IsInitialized="True" Result="[training]">
            <nannl:NewUnorderedTraining.ActivityWithResultProperties>
              <na:ActivityWithResultValue x:Key="network" ActivityResultType="nnn:NeuralNetwork" ForProperty="False" Name="network" PropertyType="Activity(nnn:NeuralNetwork)">
                <na:ActivityWithResultValue.Activity>
                  <mva:VisualBasicValue x:TypeArguments="nnn:NeuralNetwork" ExpressionText="network" sap:VirtualizedContainerService.HintSize="289,55" />
                </na:ActivityWithResultValue.Activity>
              </na:ActivityWithResultValue>
            </nannl:NewUnorderedTraining.ActivityWithResultProperties>
          </nannl:NewUnorderedTraining>
        </Sequence>
        <nannl:TrainingLoop Condition="[gIterationNo &lt;&gt; 6666666666666]" sap:VirtualizedContainerService.HintSize="1160,915">
          <nannl:TrainingLoop.Body>
            <ActivityAction x:TypeArguments="x:Int32">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Int32" Name="iterationNo" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Training Iteration Sequence" sap:VirtualizedContainerService.HintSize="405,769">
                <sap:WorkflowViewStateService.ViewState>
                  <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg3:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <nannl:TrainingIteration DisplayName="Training Iteration" sap:VirtualizedContainerService.HintSize="383,203" Result="[trainingResult]" Training="[training]">
                  <nannl:TrainingIteration.GetNextBatch>
                    <ActivityFunc x:TypeArguments="nnn:NeuralVectorFlowBatch">
                      <ActivityFunc.Result>
                        <DelegateOutArgument x:TypeArguments="nnn:NeuralVectorFlowBatch" Name="batchResult" />
                      </ActivityFunc.Result>
                      <nannl:UnorderedProviderBasedBatcher BatchSize="250" DisplayName="Unordered Provider Based Batcher" sap:VirtualizedContainerService.HintSize="343,102" LastResult="[trainingResult]" Provider="[trainingProvider]" ReinitializationFrequency="1000" Result="[batchResult]" UseCache="True">
                        <nannl:UnorderedProviderBasedBatcher.BatchingStrategy>
                          <navb:NewGaussianBatchingStrategyFactory DisplayName="GaussianBatchingStrategy" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True">
                            <navb:NewGaussianBatchingStrategyFactory.InArgumentProperties>
                              <na:InArgumentValue x:Key="stdDev" ForProperty="False" Name="stdDev" PropertyType="InArgument(x:Double)">
                                <na:InArgumentValue.InArgument>
                                  <InArgument x:TypeArguments="x:Double">1</InArgument>
                                </na:InArgumentValue.InArgument>
                              </na:InArgumentValue>
                            </navb:NewGaussianBatchingStrategyFactory.InArgumentProperties>
                          </navb:NewGaussianBatchingStrategyFactory>
                        </nannl:UnorderedProviderBasedBatcher.BatchingStrategy>
                      </nannl:UnorderedProviderBasedBatcher>
                    </ActivityFunc>
                  </nannl:TrainingIteration.GetNextBatch>
                </nannl:TrainingIteration>
                <nannl:ValidationIteration DisplayName="Validation Iteration" EveryNthIteration="1" sap:VirtualizedContainerService.HintSize="383,203" Result="[validationResult]" Training="[training]">
                  <nannl:ValidationIteration.GetNextBatch>
                    <ActivityFunc x:TypeArguments="nnn:NeuralVectorFlowBatch">
                      <ActivityFunc.Result>
                        <DelegateOutArgument x:TypeArguments="nnn:NeuralVectorFlowBatch" Name="batchResult" />
                      </ActivityFunc.Result>
                      <nannl:UnorderedProviderBasedBatcher LastResult="{x:Null}" BatchSize="50" DisplayName="Unordered Provider Based Batcher" sap:VirtualizedContainerService.HintSize="343,102" Provider="[trainingProvider]" ReinitializationFrequency="1000" Result="[batchResult]" UseCache="True">
                        <nannl:UnorderedProviderBasedBatcher.BatchingStrategy>
                          <navb:NewMonteCarloBatchingStrategyFactory DisplayName="MonteCarloBatchingStrategy" sap:VirtualizedContainerService.HintSize="200,36" IsInitialized="True" />
                        </nannl:UnorderedProviderBasedBatcher.BatchingStrategy>
                      </nannl:UnorderedProviderBasedBatcher>
                    </ActivityFunc>
                  </nannl:ValidationIteration.GetNextBatch>
                </nannl:ValidationIteration>
                <WriteLine sap:VirtualizedContainerService.HintSize="383,61" Text="[iterationNo.ToString(&quot;0000&quot;) + &quot; - Training Result: &quot; + trainingResult.AverageError.ToString(&quot;0.000000&quot;) + &quot; Validation Result: &quot; + validationResult.AverageError.ToString(&quot;0.000000&quot;)]" />
                <Assign sap:VirtualizedContainerService.HintSize="383,58">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[gIterationNo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[iterationNo]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </nannl:TrainingLoop.Body>
          <nannl:TrainingLoop.Variables>
            <Variable x:TypeArguments="ncv:BatchExecutionResult" Name="trainingResult" />
            <Variable x:TypeArguments="ncv:BatchExecutionResult" Name="validationResult" />
          </nannl:TrainingLoop.Variables>
        </nannl:TrainingLoop>
      </Sequence>
    </na:ComputationContext.Body>
    <na:ComputationContext.Variables>
      <Variable x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider" Name="trainingProvider" />
      <Variable x:TypeArguments="nnn:IUnorderedNeuralVectorFlowProvider" Name="validationProvider" />
      <Variable x:TypeArguments="nnnl:Training" Name="training" />
      <Variable x:TypeArguments="x:Int32" Name="gIterationNo" />
    </na:ComputationContext.Variables>
  </na:ComputationContext>
</Activity>